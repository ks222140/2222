-- 纯代码 ModernDark UI
local UIS = game:GetService("UserInputService")
local Tween = game:GetService("TweenService")

-- 主框架
local gui = Instance.new("ScreenGui")
gui.Name = "ModernDark"
gui.ResetOnSpawn = false
gui.Parent = game:GetService("CoreGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 400)
frame.Position = UDim2.new(0, -260, 0.5, -200)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Visible = true
frame.Parent = gui

-- 顶部霓虹条
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 3)
topBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
topBar.BorderSizePixel = 0
topBar.Parent = frame

-- 标题
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -10, 0, 30)
title.Position = UDim2.new(0, 5, 0, 5)
title.BackgroundTransparency = 1
title.Text = "LC 工具箱"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.Parent = frame

-- 容器（放你的功能开关）
local list = Instance.new("UIListLayout")
list.Padding = UDim.new(0, 8)
list.SortOrder = Enum.SortOrder.LayoutOrder
list.Parent = frame

local padding = Instance.new("UIPadding")
padding.PaddingTop = UDim.new(0, 40)
padding.PaddingLeft = UDim.new(0, 10)
padding.PaddingRight = UDim.new(0, 10)
padding.Parent = frame

-- 开关模板函数（复制就能用）
function addToggle(text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 35)
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    btn.Text = text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.BorderSizePixel = 0
    btn.LayoutOrder = #frame:GetChildren()
    btn.Parent = frame

    local on = false
    btn.MouseButton1Click:Connect(function()
        on = not on
        btn.BackgroundColor3 = on and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
        callback(on)
    end)
    return btn
end

-- 抽屉开关（滑出/滑入）
local dragBtn = Instance.new("TextButton")
dragBtn.Size = UDim2.new(0, 30, 0, 60)
dragBtn.Position = UDim2.new(1, 0, 0.5, -30)
dragBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dragBtn.Text = ">"
dragBtn.TextColor3 = Color3.new(1, 1, 1)
dragBtn.Font = Enum.Font.GothamBold
dragBtn.TextSize = 18
dragBtn.BorderSizePixel = 0
dragBtn.Parent = frame

local out = true
dragBtn.MouseButton1Click:Connect(function()
    out = not out
    dragBtn.Text = out and "<" or ">"
    local goal = out and UDim2.new(0, 0, 0.5, -200) or UDim2.new(0, -260, 0.5, -200)
    Tween:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = goal}):Play()
end)

-- 1. 快速换弹
local reloadSpeed = 2 -- 设置需要的加速倍数
addToggle("快速换弹", function(on)
    if on then
        local player = game.Players.LocalPlayer
        local reloadConnection

        local function onReload(animTrack)
            if animTrack.Animation.Name:lower():find("reload") then
                animTrack:AdjustSpeed(reloadSpeed)
                local duration = animTrack.Length / reloadSpeed
                delay(duration, function()
                    if animTrack then
                        animTrack:Stop()
                    end
                end)
            end
        end

        local function onCharacterAdded(character)
            if reloadConnection then reloadConnection:Disconnect() end
            local humanoid = character:WaitForChild("Humanoid")
            local animator = humanoid:WaitForChild("Animator")
            reloadConnection = animator.AnimationPlayed:Connect(onReload)
        end

        player.CharacterAdded:Connect(onCharacterAdded)
        onCharacterAdded(player.Character)
    else
        if reloadConnection then reloadConnection:Disconnect() end
    end
end)

-- 2. 敌方 ESP（单层，不嵌套）
addToggle("敌方 ESP", function(on)
    if on then
        local espCache = {}
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local camera = Workspace.CurrentCamera
        local LocalPlayer = Players.LocalPlayer
        local RunService = game:GetService("RunService")

        local function createDrawing(t, props)
            local obj = Drawing.new(t)
            for k, v in pairs(props) do
                obj[k] = v
            end
            return obj
        end

        local function destroyESP(player)
            local data = espCache[player]
            if data then
                for _, line in ipairs(data.boxLines) do
                    line:Remove()
                end
                data.headDot:Remove()
                data.dirLine:Remove()
                espCache[player] = nil
            end
        end

        local function updateESP(player)
            local character = player.Character
            if not character then return destroyESP(player) end

            local head = character:FindFirstChild("Head")
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if not head or not rootPart then return destroyESP(player) end

            local headPos, headVis = camera:WorldToViewportPoint(head.Position)
            local rootPos, rootVis = camera:WorldToViewportPoint(rootPart.Position)
            if not headVis or not rootVis then
                return destroyESP(player)
            end

            local boxSize = Vector2.new(rootPos.X - headPos.X, rootPos.Y - headPos.Y)
            local boxCenter = Vector2.new(headPos.X + boxSize.X / 2, headPos.Y + boxSize.Y / 2)

            if not espCache[player] then
                local boxLines = {}
                for i = 1, 4 do
                    boxLines[i] = createDrawing("Line", { Thickness = 1, Color = Color3.fromRGB(255, 0, 0) })
                end
                espCache[player] = {
                    boxLines = boxLines,
                    headDot = createDrawing("Circle", { Radius = 3, Color = Color3.fromRGB(255, 255, 0), Filled = true }),
                    dirLine = createDrawing("Line", { Thickness = 2, Color = Color3.fromRGB(50, 255, 50) })
                }
            end

            local data = espCache[player]
            for i = 1, 4 do
                local line = data.boxLines[i]
                if i == 1 then
                    line.From = Vector2.new(headPos.X - boxSize.X / 2, headPos.Y)
                    line.To = Vector2.new(rootPos.X - boxSize.X / 2, rootPos.Y)
                elseif i == 2 then
                    line.From = Vector2.new(headPos.X + boxSize.X / 2, headPos.Y)
                    line.To = Vector2.new(rootPos.X + boxSize.X / 2, rootPos.Y)
                elseif i == 3 then
                    line.From = Vector2.new(headPos.X - boxSize.X / 2, headPos.Y)
                    line.To = Vector2.new(headPos.X + boxSize.X / 2, headPos.Y)
               
