-- ========== 基础 ==========
local RunService = game:GetService("RunService")
local Players    = game:GetService("Players")
local camera     = workspace.CurrentCamera
local lp         = Players.LocalPlayer
local worldToViewport = camera.WorldToViewportPoint

-- 颜色
local COLOR_ENEMY = Color3.fromRGB(255,  0,  0)
local COLOR_TEAM  = Color3.fromRGB(  0,255,  0)
local COLOR_HEAD  = Color3.fromRGB(255,255,  0)
local COLOR_DIR   = Color3.fromRGB( 50,255, 50)
local COLOR_MELEE = Color3.fromRGB(220,  0,  0)   -- 刀轨
local COLOR_BULLET= Color3.fromRGB(255,255,  0)   -- 子弹预判线

local espCache  = {}   -- [player] = {boxLines, headDot, dirLine}
local trackTemp = {}   -- 临时刀轨/子弹线缓存

-- ========== 绘制工厂 ==========
function createDrawing(type, props)
    local obj = Drawing.new(type)
    for k,v in pairs(props) do obj[k] = v end
    return obj
end

function destroyESP(player)
    local data = espCache[player]
    if data then
        for _, l in ipairs(data.boxLines) do l:Remove() end
        data.headDot:Remove()
        data.dirLine:Remove()
        espCache[player] = nil
    end
end

-- ========== 核心：更新 ESP ==========
function updateESP(player)
    if not player.Character then return end
    local head = player.Character:FindFirstChild("Head")
    local root = player.Character:FindFirstChild("HumanoidRootPart")
    if not head or not root then return end

    local headPos, headVis = worldToViewport(camera, head.Position)
    local rootPos, rootVis = worldToViewport(camera, root.Position)
    if not headVis or not rootVis then
        local data = espCache[player]
        if data then
            for _, l in ipairs(data.boxLines) do l.Visible = false end
            data.headDot.Visible = false
            data.dirLine.Visible = false
        end
        return
    end

    local height = math.abs(headPos.Y - rootPos.Y)
    local width  = height * 0.5
    local topLeft  = Vector2.new(headPos.X - width,  headPos.Y)
    local topRight = Vector2.new(headPos.X + width,  headPos.Y)
    local botLeft  = Vector2.new(rootPos.X - width, rootPos.Y)
    local botRight = Vector2.new(rootPos.X + width, rootPos.Y)

    local myTeam = lp.Team
    local hisTeam = player.Team
    local isEnemy = (myTeam ~= hisTeam) or (myTeam == nil and player ~= lp)
    local boxColor = isEnemy and COLOR_ENEMY or COLOR_TEAM

    if not espCache[player] then
        local lines = {}
        for i = 1,4 do lines[i] = createDrawing("Line", {Thickness = 1, Color = boxColor}) end
        local dot = createDrawing("Circle", {Radius = 3, Color = COLOR_HEAD, Filled = true})
        local dir = createDrawing("Line", {Thickness = 2, Color = COLOR_DIR})
        espCache[player] = {boxLines = lines, headDot = dot, dirLine = dir}
    end

    local data = espCache[player]
    local lines = data.boxLines
    lines[1].From = topLeft  ; lines[1].To = topRight
    lines[2].From = botLeft  ; lines[2].To = botRight
    lines[3].From = topLeft  ; lines[3].To = botLeft
    lines[4].From = topRight ; lines[4].To = botRight
    data.headDot.Position = Vector2.new(headPos.X, headPos.Y - 5)

    local vel = root.Velocity
    if vel.Magnitude > 0.1 then
        local future = root.Position + vel.unit * 3
        local futPos = worldToViewport(camera, future)
        data.dirLine.From = Vector2.new(headPos.X, headPos.Y - 8)
        data.dirLine.To   = Vector2.new(futPos.X, futPos.Y)
        data.dirLine.Visible = true
    else
        data.dirLine.Visible = false
    end

    for _, l in ipairs(lines) do
        l.Visible = true
        l.Color   = boxColor
    end
    data.headDot.Visible = true
end

-- ========== 刀挥舞轨迹 ==========
function trackMelee(tool, player)
    if not tool or not tool:FindFirstChild("Handle") then return end
    local handle = tool.Handle
    local speed  = handle.AssemblyLinearVelocity
    if speed.Magnitude < 5 then return end   -- 挥速太弱忽略

    local startPos = handle.Position
    local endPos   = startPos + speed.unit * 4
    local start2D  = worldToViewport(camera, startPos)
    local end2D    = worldToViewport(camera, endPos)

    if start2D and end2D then
        local line = createDrawing("Line", {
            Thickness = 3,
            Color     = COLOR_MELEE,
            From      = Vector2.new(start2D.X, start2D.Y),
            To        = Vector2.new(end2D.X,   end2D.Y)
        })
        table.insert(trackTemp, line)
        -- 0.35 秒后淡出并销毁
        task.delay(0.35, function()
            for i = 1,0,-0.05 do
                line.Transparency = i
                task.wait(0.05)
            end
            line:Remove()
        end)
    end
end

-- ========== 子弹预判线 ==========
function trackBullet(firePos, bulletVel)
    if not firePos or not bulletVel then return end
    local start2D = worldToViewport(camera, firePos)
    local endPos  = firePos + bulletVel.unit * 500   -- 500 格够远
    local end2D   = worldToViewport(camera, endPos)

    if start2D and end2D then
        local line = createDrawing("Line", {
            Thickness = 2,
            Color     = COLOR_BULLET,
            From      = Vector2.new(start2D.X, start2D.Y),
            To        = Vector2.new(end2D.X,   end2D.Y)
        })
        table.insert(trackTemp, line)
        -- 1 秒后淡出
        task.delay(1, function()
            for i = 1,0,-0.05 do
                line.Transparency = i
                task.wait(0.05)
            end
            line:Remove()
        end)
    end
end

-- ========== 监听刀挥舞 ==========
function hookTool(player)
    player.CharacterAdded:Connect(function(char)
        local humanoid = char:WaitForChild("Humanoid")
        humanoid.ToolEquipped:Connect(function(tool)
            -- 监听 Activated = 挥舞
            tool.Activated:Connect(function()
                trackMelee(tool, player)
            end)
        end)
    end)
end

-- ========== 监听开枪（通用 RemoteEvent） ==========
local function scanFireEvent()
    -- 常见事件名，按顺序试
    local reps = game:GetService("ReplicatedStorage")
    local events = {"FireServer", "Fire", "Shoot", "WeaponFire", "RemoteFire"}
    for _, evtName in ipairs(events) do
        local event = reps:FindFirstChild(evtName, true)
        if event and event:IsA("RemoteEvent") then
            event.OnClientEvent:Connect(function(dat)
                -- 根据常见结构取位置和速度
                local pos  = dat.Pos or dat.Position or dat.BarrelPos
                local vel  = dat.Vel or dat.Velocity or dat.BulletVel
                if pos and vel then
                    trackBullet(pos, vel)
                end
            end)
            break
        end
    end
end

-- ========== 初始化 ==========
-- 已在线玩家
for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= lp then
        coroutine.wrap(function()
            repeat task.wait() until plr.Character
            updateESP(plr)
            hookTool(plr)
        end)()
    end
    hookTool(plr)   -- 也要监听自己刀轨（演示）
end

-- 新玩家
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function()
        updateESP(plr)
        hookTool(plr)
    end)
end)

Players.PlayerRemoving:Connect(destroyESP)

-- 每帧刷新 ESP
RunService.RenderStepped:Connect(function()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= lp then
            updateESP(plr)
        end
    end
end)